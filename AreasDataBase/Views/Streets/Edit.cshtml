@model AreasDataBase.Models.Street

@{
    ViewData["Title"] = "Edit";
}

<h1>Редактировать</h1>

<h4>Улица</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdStreet" />
            <div class="form-group">
                <label asp-for="NameStreet" class="control-label"></label>
                <input asp-for="NameStreet" class="form-control" />
                <span asp-validation-for="NameStreet" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="District.CityId" class="control-label"></label>
                <select id="cityDropdown" asp-for="District.CityId" class="form-control" asp-items="ViewBag.CityId"></select>
                <span asp-validation-for="District.CityId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DistrictId" class="control-label"></label>
                <select asp-for="DistrictId" class="form-control" asp-items="ViewBag.DistrictId"></select>
                <span asp-validation-for="DistrictId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Отменить редактирование</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
@*     <script>
        $(document).ready(function () {
            // Сохраняем изначальные значения для города и районов
            var originalCity = $('#District_CityId').html();
            var originalDistricts = $('#DistrictId').html();

            var selectedCity = '@Model?.District?.CityId';
            var selectedDistrict = '@Model?.DistrictId';

            // Загрузка списков при открытии формы редактирования
            $.ajax({
                type: 'GET',
                url: '/api/location/districts/' + selectedCity,
                success: function (data) {
                    var cityDropdown = $('#cityDropdown');
                    cityDropdown.empty();
                    $.each(data.cities, function (i, city) {
                        cityDropdown.append($('<option/>').val(city.idCity).text(city.nameCity));
                    });

                    // Установка выбранного города при открытии формы
                    cityDropdown.val(selectedCity);

                    var districtDropdown = $('#DistrictId');
                    districtDropdown.empty();
                    $.each(data.districts, function (i, district) {
                        districtDropdown.append($('<option/>').val(district.idDistrict).text(district.nameDistrict));
                    });

                    // Установка выбранного района при открытии формы
                    districtDropdown.val(selectedDistrict);
                }
            });

            // Обработчик изменения города
            $("#cityDropdown").change(function () {
                var cityId = $(this).val();
                $.ajax({
                    type: 'GET',
                    url: '/api/location/districts/' + cityId,
                    success: function (data) {
                        var districtDropdown = $('#DistrictId');
                        districtDropdown.empty();
                        $.each(data, function (i, district) {
                            districtDropdown.append($('<option/>').val(district.idDistrict).text(district.nameDistrict));
                        });

                        // Сброс выбранного района при изменении города
                        $('#DistrictId').val('');
                    }
                });
            });
        });
    </script> *@


    <script>
        $(document).ready(function () {
            // Сохраняем изначальные значения для города и районов
            var originalCity = $('#District_CityId').html();
            var originalDistricts = $('#DistrictId').html();

            var selectedCity = '@Model?.District?.CityId';
            var selectedDistrict = '@Model?.DistrictId';

            // Загрузка списков при открытии формы редактирования
            loadCities(selectedCity, function () {
                loadDistricts(selectedCity, function () {
                    // Установка выбранных значений после полной загрузки списков
                    $('#cityDropdown').val(selectedCity);
                    $('#DistrictId').val(selectedDistrict);
                });
            });

            // Обработчик изменения города
            $("#cityDropdown").change(function () {
                var cityId = $(this).val();
                loadDistricts(cityId);
            });

            function loadCities(selectedCity, callback) {
                $.ajax({
                    type: 'GET',
                    url: '/api/location/cities',
                    success: function (data) {
                        var cityDropdown = $('#cityDropdown');
                        cityDropdown.empty();
                        $.each(data, function (i, city) {
                            cityDropdown.append($('<option/>').val(city.idCity).text(city.nameCity));
                        });

                        callback(); // Вызываем колбэк после загрузки
                    }
                });
            }

            function loadDistricts(cityId, callback) {
                $.ajax({
                    type: 'GET',
                    url: '/api/location/districts/' + cityId,
                    success: function (data) {
                        var districtDropdown = $('#DistrictId');
                        districtDropdown.empty();
                        $.each(data, function (i, district) {
                            districtDropdown.append($('<option/>').val(district.idDistrict).text(district.nameDistrict));
                        });

                        callback(); // Вызываем колбэк после загрузки
                    }
                });
            }
        });
    </script>


}
