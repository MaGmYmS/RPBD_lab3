@model AreasDataBase.Models.Citizen

@{
    ViewData["Title"] = "Create";
}

<h1>Добавление гражданина</h1>

<h4>Гражданин</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FullName" class="control-label"></label>
                <input asp-for="FullName" class="form-control" />
                <span asp-validation-for="FullName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PassportData" class="control-label"></label>
                <input asp-for="PassportData" class="form-control" />
                <span asp-validation-for="PassportData" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Gender" /> @Html.DisplayNameFor(model => model.Gender)
                </label>
            </div>


            <div class="form-group">
                <label asp-for="Apartment.ResidentialBuilding.Street.District.CityId" class="control-label"></label>
                <select asp-for="Apartment.ResidentialBuilding.Street.District.CityId" class="form-control" asp-items="ViewBag.CityId"></select>
                <span asp-validation-for="Apartment.ResidentialBuilding.Street.District.CityId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apartment.ResidentialBuilding.Street.DistrictId" class="control-label"></label>
                <select asp-for="Apartment.ResidentialBuilding.Street.DistrictId" class="form-control" asp-items="ViewBag.DistrictId"></select>
                <span asp-validation-for="Apartment.ResidentialBuilding.Street.DistrictId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apartment.ResidentialBuilding.StreetId" class="control-label"></label>
                <select asp-for="Apartment.ResidentialBuilding.StreetId" class="form-control" asp-items="ViewBag.StreetId"></select>
                <span asp-validation-for="Apartment.ResidentialBuilding.StreetId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Apartment.ResidentialBuildingId" class="control-label"></label>
                <select asp-for="Apartment.ResidentialBuildingId" class="form-control" asp-items="ViewBag.ResidentialBuildingId"></select>
                <span asp-validation-for="Apartment.ResidentialBuildingId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ApartmentId" class="control-label"></label>
                <select asp-for="ApartmentId" class="form-control" asp-items="ViewBag.ApartmentId"></select>
                <span asp-validation-for="ApartmentId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <input type="submit" value="Добавить" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Вернуться к списку</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        <script>
            $(document).ready(function () {
                // Сохраняем изначальные значения для города, районов, улиц, домов и квартир
                var originalCity = $('#Apartment_ResidentialBuilding_Street_District_CityId').html();
                var originalDistricts = $('#Apartment_ResidentialBuilding_Street_DistrictId').html();
                var originalStreets = $('#Apartment_ResidentialBuilding_StreetId').html();
                var originalHouses = $('#Apartment_ResidentialBuildingId').html();
                var originalApartments = $('#ApartmentId').html();

                // Зануляем списки при открытии формы добавления
                $('#Apartment_ResidentialBuilding_Street_District_CityId').val('');
                $('#Apartment_ResidentialBuilding_Street_DistrictId').html('<option value=""></option>').val('');
                $('#Apartment_ResidentialBuilding_StreetId').html('<option value=""></option>').val('');
                $('#Apartment_ResidentialBuildingId').html('<option value=""></option>').val('');
                $('#ApartmentId').html('<option value=""></option>').val('');

                $('#Apartment_ResidentialBuilding_Street_District_CityId').change(function () {
                    var cityId = $(this).val();
                    $.ajax({
                        type: 'GET',
                        url: '/api/location/districts/' + cityId,
                        success: function (data) {
                            var districtsDropdown = $('#Apartment_ResidentialBuilding_Street_DistrictId');
                            districtsDropdown.empty();
                            $.each(data, function (i, district) {
                                districtsDropdown.append($('<option/>').val(district.idDistrict).text(district.nameDistrict));
                            });

                            // Сброс выбранного района, улицы, дома и квартиры при изменении города
                            $('#Apartment_ResidentialBuilding_Street_DistrictId').val('');
                            $('#Apartment_ResidentialBuilding_StreetId').empty();
                            $('#Apartment_ResidentialBuildingId').empty();
                            $('#ApartmentId').empty();
                        }
                    });
                });

                $('#Apartment_ResidentialBuilding_Street_DistrictId').change(function () {
                    var districtId = $(this).val();
                    $.ajax({
                        type: 'GET',
                        url: '/api/location/streets/' + districtId,
                        success: function (data) {
                            var streetsDropdown = $('#Apartment_ResidentialBuilding_StreetId');
                            streetsDropdown.empty();
                            $.each(data, function (i, street) {
                                streetsDropdown.append($('<option/>').val(street.idStreet).text(street.nameStreet));
                            });

                            // Сброс выбранной улицы, дома и квартиры при изменении района
                            $('#Apartment_ResidentialBuilding_StreetId').val('');
                            $('#Apartment_ResidentialBuildingId').empty();
                            $('#ApartmentId').empty();
                        }
                    });
                });

                $('#Apartment_ResidentialBuilding_StreetId').change(function () {
                    var streetId = $(this).val();
                    $.ajax({
                        type: 'GET',
                        url: '/api/location/houses/' + streetId,
                        success: function (data) {
                            var housesDropdown = $('#Apartment_ResidentialBuildingId');
                            housesDropdown.empty();
                            $.each(data, function (i, house) {
                                housesDropdown.append($('<option/>').val(house.idResidentialBuilding).text(house.houseNumber));
                            });

                            // Сброс выбранного дома и квартиры при изменении улицы
                            $('#Apartment_ResidentialBuildingId').val('');
                            $('#ApartmentId').empty();
                        }
                    });
                });

                $('#Apartment_ResidentialBuildingId').change(function () {
                    var residentialBuildingId = $(this).val();
                    $.ajax({
                        type: 'GET',
                        url: '/api/location/apartments/' + residentialBuildingId,
                        success: function (data) {
                            var apartmentsDropdown = $('#ApartmentId');
                            apartmentsDropdown.empty();
                            $.each(data, function (i, apartment) {
                                apartmentsDropdown.append($('<option/>').val(apartment.idApartment).text(apartment.apartmentNumber));
                            });
                        }
                    });
                });
            });
        </script>

    }
}
